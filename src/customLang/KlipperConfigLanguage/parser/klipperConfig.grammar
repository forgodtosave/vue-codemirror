@top Program { (Import | ConfigBlock)* }

@skip { Comment | AutoGenerated newline | space | blankLine } 

valueBlock<content> { indent (content newline | valueBlock<content>)+ (dedent | eof) }
sep<content, seperator> { content (seperator content)+ }



Import { "[" ImportKeyword (FilePath | File) "]" newline }
ConfigBlock {"[" BlockType Identifier? "]" newline Body }

Body { Option+ }
Option { Parameter ":" Value | GcodeKeyword ":" Jinja2 }

Value { value (newline | eof) | newline valueBlock<value> }
Jinja2 { jinja2 (newline | eof) | newline valueBlock<jinja2> }

value { Pin | pins | VirtualPin | VirtualPin | Cords | Number | String | Boolean | Path | FilePath }
pins { sep<Pin, ","> }
VirtualPin { string ":" string }
Cords { sep<number, ","> }
Number { number }
String { string }
File {string "." string }
Path {  "/"? sep<string, "/"> }
FilePath {  Path "." string}

@skip {} {
    blankLine {
      blankLineStart space? Comment? newline
    }
  }


@context trackIndent from "./tokens.js"
@external tokens indentation from "./tokens.js" { indent, dedent }
@external tokens newlines from "./tokens.js" { newline, blankLineStart, eof }

@tokens {
  ImportKeyword{ "include" }
  GcodeKeyword{ "gcode" }
  BlockType { $[a-zA-Z0-9_]+ }
  Identifier { $[a-zA-Z0-9_.\-]+ }
  Parameter { $[a-zA-Z0-9_]+ }
  
  string { $[ a-zA-Z0-9_\-]+ }
  jinja2 { $[ \ta-zA-Z0-9_.\-"'{}%=]+ }
  number { "-"? $[0-9]+ ("." $[0-9]*)? }
  Boolean { "True" | "False" } 
  Pin { ("^" | "~")? "!"? "P" $[A-Z] $[0-9]+ } 

  AutoGenerated { "#*#" ![\n\r]* }
  Comment { "#" ![\n\r]* }

  space { $[ \t\f]+ }

  @precedence { space, jinja2, string}
  @precedence { AutoGenerated, Comment }
  @precedence { number, Pin, Boolean, ImportKeyword, string }
  @precedence { ImportKeyword, BlockType}
  @precedence { GcodeKeyword, Parameter}
}

@external propSource klipperConfigHighlighting from "./highlight"

@detectDelim

//npx @lezer/generator klipperConfig.grammar -o klipperConfigParser.js